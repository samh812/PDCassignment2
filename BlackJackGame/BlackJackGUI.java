/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BlackJackGame;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author samh
 */
public class BlackJackGUI extends javax.swing.JFrame {

    private JButton hitButton;
    private JButton standButton;
    private JButton newGameButton;
    private JLabel playerLabel;
    private JLabel dealerLabel;
    private JTextArea gameTextArea;
    
    private BlackJackGame game;
    /**
     * Creates new form BlackJackGUI
     */
    public BlackJackGUI() {
        game = new BlackJackGame(); // Assuming BlackJackGame is the main class for the game logic

        setTitle("BlackJack Game");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Create components
        hitButton = new JButton("Hit");
        standButton = new JButton("Stand");
        newGameButton = new JButton("New Game");
        playerLabel = new JLabel("Player:");
        dealerLabel = new JLabel("Dealer:");
        gameTextArea = new JTextArea();
        gameTextArea.setEditable(false);

        // Add components to frame
        JPanel topPanel = new JPanel();
        topPanel.add(playerLabel);
        topPanel.add(dealerLabel);

        JPanel bottomPanel = new JPanel();
        bottomPanel.add(hitButton);
        bottomPanel.add(standButton);
        bottomPanel.add(newGameButton);

        add(topPanel, BorderLayout.NORTH);
        add(new JScrollPane(gameTextArea), BorderLayout.CENTER);
        add(bottomPanel, BorderLayout.SOUTH);

        // Add action listeners
        hitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                game.hit();
                updateGameText();
            }
        });

        standButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                game.stand();
                updateGameText();
            }
        });

        newGameButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                game.newGame();
                updateGameText();
            }
        });

        updateGameText();
    }

    private void updateGameText() {
        // Update the game text area with the current game state
        gameTextArea.setText(game.getGameState()); // Assuming getGameState() returns a String representing the game state
        playerLabel.setText("Player: " + game.getPlayerScore()); // Assuming getPlayerScore() returns the player's score
        dealerLabel.setText("Dealer: " + game.getDealerScore()); // Assuming getDealerScore() returns the dealer's score
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BlackJackGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
